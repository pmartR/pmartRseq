% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/applyFilt.R
\name{applyFilt}
\alias{applyFilt}
\alias{applyFilt}
\alias{applyFilt.countFilter}
\alias{applyFilt}
\alias{applyFilt.sampleFilter}
\alias{applyFilt}
\alias{applyFilt.metaFilter}
\title{Apply a filter to an omicsData object}
\usage{
applyFilt(filter_object, omicsData, ...)

\method{applyFilt}{countFilter}(filter_object, omicsData, min_num = 2,
  num_samps = NULL)

\method{applyFilt}{sampleFilter}(filter_object, omicsData, min_num = 2,
  samps_to_remove = NULL)

\method{applyFilt}{metaFilter}(filter_object, omicsData, keep_taxa)
}
\arguments{
\item{filter_object}{an object of the class "countFilter" or "sampleFilter", created by \code{count_based_filter} \code{sample_based_filter}.}

\item{omicsData}{an object of the class \code{seqData} created by \code{\link{as.seqData}}.}

\item{min_num}{OTUs must have a max/mean/percent/nonmiss/sum number of counts above this threshold. OTUs with a count less than or equal to this number will be removed. If percent, give the decimal number, not the percentage.}

\item{num_samps}{for k over a filtering, the minimum number of samples that need to have at least \code{min_num} features}

\item{samps_to_remove}{Sample names selected to remove based on sample metadata criteria}

\item{keep_taxa}{Character vector specifying which values to keep}

\item{min_num}{Samples must have a sum number of OTU reads above this threshold. Samples with a sum less than or equal to this number will be removed.}
}
\value{
An object of the class \code{seqData}, with specified cname_ids, edata_cnames, taxa_cnames, ec_cnames, and gene_cnames filtered out of the appropriate datasets.
}
\description{
This function takes a filter object of class "countFilter" or "sampleFilter", and applies the filter to a dataset of class 'seqData'.

function for countFilter

function for countFilter

function for metaFilter
}
\examples{
\dontrun{
library(mintJansson)
data(rRNA_data)

to_filter <- count_based_filter(omicsData = rRNA_data, fn="mean")
rRNAdata2 <- applyFilt(filter_object = to_filter, omicsData = rRNA_data, min_num = 2)
print(str(attributes(rRNAdata2)$filters))

to_filter2 <- count_based_filter(omicsData = rRNAdata, fn="max")
rRNAdata3 <- applyFilt(filter_object = to_filter2, omicsData = rRNAdata, min_num = 2)
print(str(attributes(rRNAdata3)$filters))
}
}
\seealso{
\code{\link{count_based_filter}} \code{\link{sample_based_filter}}
}
\author{
Allison Thompson
}
